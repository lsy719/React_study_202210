{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\learn04_React\\\\react_staging\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js'; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = () => {\n      // 获取用户的输入\n      const {\n        keyWordElement: {\n          value: data\n        }\n      } = this; //解构赋值的连续写法+重命名\n      // 发送请求前通知List更新状态\n\n      PubSub.publish('name', {\n        isFirst: false,\n        isLoading: true\n      }); // 发送网络请求--使用axios\n\n      /* axios.get(`api2/?q=${data}`).then(\r\n        res => {\r\n          PubSub.publish('name',{isFirst:false, isLoading:false, users: res.data.items})\r\n        },\r\n        err => {\r\n          PubSub.publish('name',{isFirst:false, isLoading:false, err: err.message})\r\n        },\r\n      ) */\n      // 发送网络请求--使用fetch发送\n\n      fetch(`api2/?q=${data}`).then(res => {\n        console.log('联系服务器成功了');\n        return res.json(); //返回的是一个promise，因为返回的是promise，所以then的状态同此promise\n        // 断网返回非promise值，包括undefined，走成功\n      }, err => {\n        console.log('联系服务器失败了', err);\n        return new Promise(); //终端promise链，返回一个初始化状态的promise，永远为pending\n      }).then(res => {\n        console.log('获取数据成功', res);\n      }).catch();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22 Github \\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 98\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","PubSub","Search","search","keyWordElement","value","data","publish","isFirst","isLoading","fetch","then","res","console","log","json","err","Promise","catch","render","c"],"sources":["D:/study/learn04_React/react_staging/src/components/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\n// import axios from 'axios';\r\n\r\nexport default class Search extends Component {\r\n  search = () => {\r\n    // 获取用户的输入\r\n    const {keyWordElement:{value:data}} = this; //解构赋值的连续写法+重命名\r\n    // 发送请求前通知List更新状态\r\n    PubSub.publish('name',{isFirst:false, isLoading:true})\r\n\r\n    // 发送网络请求--使用axios\r\n    /* axios.get(`api2/?q=${data}`).then(\r\n      res => {\r\n        PubSub.publish('name',{isFirst:false, isLoading:false, users: res.data.items})\r\n      },\r\n      err => {\r\n        PubSub.publish('name',{isFirst:false, isLoading:false, err: err.message})\r\n      },\r\n    ) */\r\n\r\n    // 发送网络请求--使用fetch发送\r\n    fetch(`api2/?q=${data}`).then(\r\n      res => {\r\n        console.log('联系服务器成功了');\r\n        return res.json(); //返回的是一个promise，因为返回的是promise，所以then的状态同此promise\r\n        // 断网返回非promise值，包括undefined，走成功\r\n      },\r\n      err => {\r\n        console.log('联系服务器失败了', err); \r\n        return new Promise(); //终端promise链，返回一个初始化状态的promise，永远为pending\r\n      }\r\n    ).then(\r\n      res => {\r\n        console.log('获取数据成功',res)\r\n      }\r\n    ).catch()\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"jumbotron\">\r\n        <h3 className=\"jumbotron-heading\">搜索 Github 用户</h3>\r\n        <div>\r\n          <input ref = {c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\"/>&nbsp;<button onClick={this.search}>搜索</button>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;EAAA;IAAA;;IAAA,KAC5CG,MAD4C,GACnC,MAAM;MACb;MACA,MAAM;QAACC,cAAc,EAAC;UAACC,KAAK,EAACC;QAAP;MAAhB,IAAgC,IAAtC,CAFa,CAE+B;MAC5C;;MACAL,MAAM,CAACM,OAAP,CAAe,MAAf,EAAsB;QAACC,OAAO,EAAC,KAAT;QAAgBC,SAAS,EAAC;MAA1B,CAAtB,EAJa,CAMb;;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MAEI;;MACAC,KAAK,CAAE,WAAUJ,IAAK,EAAjB,CAAL,CAAyBK,IAAzB,CACEC,GAAG,IAAI;QACLC,OAAO,CAACC,GAAR,CAAY,UAAZ;QACA,OAAOF,GAAG,CAACG,IAAJ,EAAP,CAFK,CAEc;QACnB;MACD,CALH,EAMEC,GAAG,IAAI;QACLH,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,GAAxB;QACA,OAAO,IAAIC,OAAJ,EAAP,CAFK,CAEiB;MACvB,CATH,EAUEN,IAVF,CAWEC,GAAG,IAAI;QACLC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB;MACD,CAbH,EAcEM,KAdF;IAeD,CAjC2C;EAAA;;EAkC5CC,MAAM,GAAG;IACP,oBACE;MAAS,SAAS,EAAC,WAAnB;MAAA,wBACE;QAAI,SAAS,EAAC,mBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAO,GAAG,EAAIC,CAAC,IAAI,KAAKhB,cAAL,GAAsBgB,CAAzC;UAA4C,IAAI,EAAC,MAAjD;UAAwD,WAAW,EAAC;QAApE;UAAA;UAAA;UAAA;QAAA,QADF,uBACyF;UAAQ,OAAO,EAAE,KAAKjB,MAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADzF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AA3C2C"},"metadata":{},"sourceType":"module"}